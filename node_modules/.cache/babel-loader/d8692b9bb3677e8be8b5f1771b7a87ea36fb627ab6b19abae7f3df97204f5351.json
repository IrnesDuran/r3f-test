{"ast":null,"code":"var _jsxFileName = \"/Users/irnesduran/Desktop/Projects/r3f-test/src/components/FloatingIsland/FloatingIsland.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { BufferAttribute, Color } from 'three';\nimport { useLoader } from '@react-three/fiber';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FloatingIsland = () => {\n  _s();\n  const gltf = useLoader(GLTFLoader, process.env.PUBLIC_URL + 'models/floating_island.glb');\n  useEffect(() => {\n    if (!gltf) return;\n    // let mesh = gltf.scene.children[0]\n    // let uvs = mesh.geometry.attributes.uv.array\n    // mesh.geometry.setAttribute('uv2', new BufferAttribute(uvs, 2))\n\n    // mesh.material.lightMap = mesh.material.map\n    // mesh.material.lightMapIntensity = 400\n    // mesh.material.color = new Color(0.04, 0.06, 0.1)\n  }, [gltf]);\n  return /*#__PURE__*/_jsxDEV(\"primitive\", {\n    object: gltf.scene\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n_s(FloatingIsland, \"QQ+YsgFSgVwbH4AklLcxjW+VSGM=\", false, function () {\n  return [useLoader];\n});\n_c = FloatingIsland;\nexport default FloatingIsland;\nvar _c;\n$RefreshReg$(_c, \"FloatingIsland\");","map":{"version":3,"names":["React","useEffect","BufferAttribute","Color","useLoader","GLTFLoader","FloatingIsland","gltf","process","env","PUBLIC_URL","scene"],"sources":["/Users/irnesduran/Desktop/Projects/r3f-test/src/components/FloatingIsland/FloatingIsland.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { BufferAttribute, Color } from 'three'\nimport { useLoader } from '@react-three/fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\n\nconst FloatingIsland = () => {\n  const gltf = useLoader(\n    GLTFLoader,\n    process.env.PUBLIC_URL + 'models/floating_island.glb'\n  )\n\n  useEffect(() => {\n    if (!gltf) return\n    // let mesh = gltf.scene.children[0]\n    // let uvs = mesh.geometry.attributes.uv.array\n    // mesh.geometry.setAttribute('uv2', new BufferAttribute(uvs, 2))\n\n    // mesh.material.lightMap = mesh.material.map\n    // mesh.material.lightMapIntensity = 400\n    // mesh.material.color = new Color(0.04, 0.06, 0.1)\n  }, [gltf])\n\n  return <primitive object={gltf.scene} />\n}\n\nexport default FloatingIsland\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,eAAe,EAAEC,KAAK,QAAQ,OAAO;AAC9C,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,UAAU,QAAQ,uCAAuC;AAAA;AAElE,MAAMC,cAAc,GAAG,MAAM;EAAA;EAC3B,MAAMC,IAAI,GAAGH,SAAS,CACpBC,UAAU,EACVG,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,4BAA4B,CACtD;EAEDT,SAAS,CAAC,MAAM;IACd,IAAI,CAACM,IAAI,EAAE;IACX;IACA;IACA;;IAEA;IACA;IACA;EACF,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,oBAAO;IAAW,MAAM,EAAEA,IAAI,CAACI;EAAM;IAAA;IAAA;IAAA;EAAA,QAAG;AAC1C,CAAC;AAAA,GAlBKL,cAAc;EAAA,QACLF,SAAS;AAAA;AAAA,KADlBE,cAAc;AAoBpB,eAAeA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}